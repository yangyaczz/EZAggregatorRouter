const { BigNumber, Signer } = require("ethers");
const { ethers } = require("hardhat");

const nftABI = require("./abis/ERC721.json");
const wethABI = require("./abis/WETH.json");

const seaportABI = require("./abis/Seaport.json")
const conduitABI = require("./abis/Conduit.json")


describe("aggregator sell nft mulit test", function () {
    let alice;
    let nft;
    let sr;

    let seaport;
    let conduit;

    // let blocknumber = 16389451
    // let nfttrader = "0xc36bd1d1e2cfce872464bf243b5062e7b97a50c3"
    // let nftAddress =  "0xbCe3781ae7Ca1a5e050Bd9C4c77369867eBc307e"
    // let tokenid = 7980
    // let nftTokenId =  "0xbCe3781ae7Ca1a5e050Bd9C4c77369867eBc307e:7980"

    let blocknumber = 16411736
    let nfttrader = "0x21C8e614CD5c37765411066D2ec09912020c846F"
    let nftAddress =  "0x971cbc34Dce4d0A9BEedabB4bD7c9E5A48E6bB20"
    let tokenid = 6
    let nftTokenId =  "0x971cbc34Dce4d0A9BEedabB4bD7c9E5A48E6bB20:6"


    beforeEach(async () => {

        await network.provider.request({
            method: "hardhat_reset",
            params: [
                {
                    forking: {
                        jsonRpcUrl: "https://eth-mainnet.g.alchemy.com/v2/b5Av64vYI2CowvlC4ezAAyDrbdNQ0rPx",
                        blockNumber: blocknumber,
                    },
                },
            ],
        });



        const mockAddress = nfttrader;
        await network.provider.request({
            method: "hardhat_impersonateAccount",
            params: [mockAddress],
        });

        // await network.provider.send("hardhat_setBalance", [
        //     "0x64C362d2fF237f44C8a774A973984886dBd9B21D",
        //     '0x1d6329f1c35ca4bfabb9f560ffffffffff'
        // ]);

        alice = await ethers.provider.getSigner(mockAddress);
        ////////////////////////

        seaport = new ethers.Contract("0x00000000006c3852cbef3e08e8df289169ede581", seaportABI, alice)
        conduit = new ethers.Contract("0x1e0049783f008a0085193e00003d00cd54003c71", conduitABI, alice)


        ////////////


        nft = new ethers.Contract(nftAddress, nftABI, alice);

        const wethAddress = "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2";
        weth = new ethers.Contract(wethAddress, wethABI, alice);



        const SR = await ethers.getContractFactory("EZAggregatorV1Router")
        sr = await SR.attach("0xac3e3114784b46a8b201c07B69Db87BBCDbc9179")

        // const NFT = await ethers.getContractAt("IERC721Receiver")
        // nft = await NFT.attach(nftAddress)

        //////////////////////
    });

    it("sell nft through simpleRouter", async () => {

        let beforeweth = await weth.balanceOf(alice._address)



        console.log(
            "before execute taker nft balance:",
            await nft.balanceOf(alice._address)
        );

        ////////////////////////////////// 1 get from api
        

        let data = "0xb88d4fde00000000000000000000000021c8e614cd5c37765411066d2ec09912020c846f000000000000000000000000385df8cbc196f5f780367f3cdc96af072a916f7e0000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000004e4760f2a0b000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000385df8cbc196f5f780367f3cdc96af072a916f7e0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e4267bf79700000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000021c8e614cd5c37765411066d2ec09912020c846f00000000000000000000000021c8e614cd5c37765411066d2ec09912020c846f000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000003c00000000000000000000000000000000000000000000000000000000000000001000000000000000000000000385df8cbc196f5f780367f3cdc96af072a916f7e00000000000000000000000000000000000000000000000000271471148780000000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000264800000000000000000000000000000000000000000000000000000000000000c000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e3a463d743f762d538031bad3f1e748bb41f96ec000000000000000000000000971cbc34dce4d0a9beedabb4bd7c9e5a48e6bb2000000000000000000000000000000000000000000000000000271471148780000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000009f93623019049c76209c26517acc2af9d49c69b000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000000000000000000000000000000000000000000030000000000000000000000000000000000000000000000000000000063c393e10000000000000000000000000000000000000000000000000000000063eb20b000000000000000000000000000000000000000000000000000000000000026480000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000001b3a3266fa8251dce8d45ec462bcbf4a45e511f1667114adf258cf52e18211d7276ffed132528f36739ce5556b6a9e9e4b27e37601e28b91771a5cd337b528edcb000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

        await alice.sendTransaction({
            to: nftAddress,
            data: data
        })



        // const decode = hre.ethers.utils.defaultAbiCoder.decode(
        //     ["address", "address", "uint256", "bytes"],
        //     ethers.utils.hexDataSlice(data, 4)
        // );

        // console.log(decode)

        // let stfd = "0x760f2a0b000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000613d3c588f6b8f89302b463f8f19f7241b2857e2000000000000000000000000000000000000000000000000000000000000006000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000864f2ec5c5200000000000000000000000000000000000000000000000000000000000000a000000000000000000000000064c362d2ff237f44c8a774a973984886dbd9b21d00000000000000000000000064c362d2ff237f44c8a774a973984886dbd9b21d00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000840000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000aa24b31e31cb0000000000000000000000000000000000000000000000000000000063bbf7f000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000613d3c588f6b8f89302b463f8f19f7241b2857e2000000000000000000000000000000000000000000000000000000000000000031a1c11f5a0ce0afec3f55d6cc3e9c6167ce1193636d9f2fd2da82d4848146770ee943f854809f71da072c82ac4f5b73a6736d6ae2ae82e8572cf842bf5f17b5000000000000000000000000000000000000000000000000000000000000001b0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000f461a402a662dde21478c2764549d609000000000000000000000000aa2f597552dc6350195995f4845b882f81d4122f00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000644abacc000000000000000000000000c02aaa39b223fe8d0a0e5c4f27ead9083c756cc200000000000000000000000000000000000000000000000000000000000001a00000000000000000000000000000000000000000000000000000000000000240518596b5c5f5e59c0b465fbc2c7ff2ea1683e3ddae9e604fb147908196cfb22b514eaa76220bcbab5196d6608ecdc16d2c62ed6463ba9716f89ac7ac3a48780b000000000000000000000000000000000000000000000000000000000000001b00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000000111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000002386f26fc10000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000067d9417c9c3c250f61a83c7e8658dac487b56b09000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002386f26fc100002aa983b889bdac6849ec240cdc2a259d350c26f67df7642ad75887a315786410000000000000000000000000f849de01b080adc3a814fabe1e2087475cf2ed9417c9c3c250f61a83c7e8658dac487b56b090000000000000000000000000000000000000000000000000000000000001b8f00000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000001388000000000000000000000000d823c605807cc5e6bd6fc0d7e4eea50d3e2d66cd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"

        // await nft['safeTransferFrom(address,address,uint256,bytes)']('0x64C362d2fF237f44C8a774A973984886dBd9B21D', '0x613D3c588F6B8f89302b463F8F19f7241B2857E2', 7055 , stfd)


        console.log(
            "after execute taker nft balance:",
            await nft.balanceOf(alice._address)
        );

        let afterweth = await weth.balanceOf(alice._address)


        console.log("weth receive", afterweth.sub(beforeweth))
    });
});
