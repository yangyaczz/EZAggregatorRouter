const { BigNumber, Signer } = require("ethers");
const { ethers } = require("hardhat");

const nftABI = require("./abis/ERC721.json");

describe("aggregator buy nft test", function () {
  let alice;
  let nft;
  let sr;

  beforeEach(async () => {
    const mockAddress = "0x176f3dab24a159341c0509bb36b833e7fdd0a132";
    await network.provider.request({
      method: "hardhat_impersonateAccount",
      params: [mockAddress],
    });

    alice = await ethers.provider.getSigner(mockAddress);


    const nftAddress = "0xba30E5F9Bb24caa003E9f2f0497Ad287FDF95623";
    nft = new ethers.Contract(nftAddress, nftABI, alice);

    const paramsConstractorMainnet = {
      weth9: "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
      reservoir: "0x178A86D36D89c7FDeBeA90b739605da7B131ff6A",
      seaportModule: "0x3729014ef28f01B3ddCF7f980D925E0B71b1F847",
      looksRareModule: "0x385df8CBC196f5f780367F3cDC96aF072a916F7E",
      x2y2Module: "0x613D3c588F6B8f89302b463F8F19f7241B2857E2",
      sudoswap: "0x2B2e8cDA09bBA9660dCA5cB6233787738Ad68329",
      ezswap: "0xa63eC144d070a1BF19a7577C88c580E7de92E0fc",
    };

    sr = await (
      await ethers.getContractFactory("EZAggregatorV1Router")
    ).deploy(paramsConstractorMainnet);

    //////////////////////
  });

  it("buy nft through simpleRouter", async () => {
    console.log(
      "taker address is:",
      alice._address,
      "relayer address is:",
      sr.address
    );

    console.log(
      "before execute taker nft balance:",
      await nft.balanceOf(alice._address),
      "before execute relayer nft balance:",
      await nft.balanceOf(sr.address)
    );
    /////


    // opensea
    let dataApi = {
      from: "0xb7ca895f81f20e05a5eb11b05cbaab3dae5e23cd",
      to: "0x178a86d36d89c7fdebea90b739605da7b131ff6a",
      data: "0x760f2a0b0000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000200000000000000000000000003729014ef28f01b3ddcf7f980d925e0b71b1f8470000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000001156abf16a40f00000000000000000000000000000000000000000000000000000000000000000ee4d44e2a2d00000000000000000000000000000000000000000000000000000000000000e00000000000000000000000000000000000000000000000000000000000000b40000000000000000000000000176f3dab24a159341c0509bb36b833e7fdd0a132000000000000000000000000176f3dab24a159341c0509bb36b833e7fdd0a1320000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000001156abf16a40f00000000000000000000000000000000000000000000000000000000000000000ec000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000054000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000046000000000000000000000000000000000000000000000000000000000000004e000000000000000000000000007c0872e541f05910cb2ff1f310f50f79555bd08000000000000000000000000004c00500000ad104d7dbd00e3ae0a5c00560c000000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000063892b3a0000000000000000000000000000000000000000000000000000000063b209ba0000000000000000000000000000000000000000000000000000000000000000360c6ebe00000000000000000000000000000000000000000534f762f284d4030000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000ba30e5f9bb24caa003e9f2f0497ad287fdf9562300000000000000000000000000000000000000000000000000000000000003df000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000872c51c4d97fa000000000000000000000000000000000000000000000000000872c51c4d97fa00000000000000000000000000007c0872e541f05910cb2ff1f310f50f79555bd0800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003774a4d40a7600000000000000000000000000000000000000000000000000003774a4d40a760000000000000000000000000000000a26b00c1f0df003000390027140000faa7190000000000000000000000000000000000000000000000000000000000000041135bc90604d68a20efbafb1116ce5d17eb96a04d23b3d16ba6c80e8846943f7a3eff6dcf96d09faec9191029afb6f118f4c76cf1c02785badcbb36f78ff19b611c00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000046000000000000000000000000000000000000000000000000000000000000004e000000000000000000000000065940296a73ba19786399353af6ac4f6b2744513000000000000000000000000004c00500000ad104d7dbd00e3ae0a5c00560c000000000000000000000000000000000000000000000000000000000000000160000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000063a2aac30000000000000000000000000000000000000000000000000000000063a69f430000000000000000000000000000000000000000000000000000000000000000360c6ebe0000000000000000000000000000000000000000a7da835ebeea4e690000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000ba30e5f9bb24caa003e9f2f0497ad287fdf95623000000000000000000000000000000000000000000000000000000000000114d000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000874ef557a00f0000000000000000000000000000000000000000000000000000874ef557a00f000000000000000000000000000065940296a73ba19786399353af6ac4f6b274451300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003782dace9d9000000000000000000000000000000000000000000000000000003782dace9d900000000000000000000000000000000a26b00c1f0df003000390027140000faa7190000000000000000000000000000000000000000000000000000000000000041ec834644852d7d46d98c2f7bda8508266eabdcf9ee65edf8c69a2d59ea5b7a142d9c61b38edaca6fbf741ac277b07a5697238f4a20166dc6e8f9a36ba15209dd1b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000001600000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000ae0000000000000000000000000000000000000000000000000000000000000014000000000000000000000000000000000000000000000000000000000000001a
      value: "0x01156abf16a40f0000",
    };

    let input;

    if (dataApi.to == "0x178a86d36d89c7fdebea90b739605da7b131ff6a") {
      // ReservoirV6 goerli 0xb35d22a4553ab9d2b85e2a606cbae55f844df50c
      input = ethers.utils.defaultAbiCoder.encode(
        ["uint256", "bytes"],
        [dataApi.value, dataApi.data]
      );
    } else {
      console.log("offerMarketId error");
      return;
    }

    await sr['execute(bytes,bytes[],uint256)']('0x00', [input], 2000000000, { value: dataApi.value });

    console.log(
      "after execute taker nft balance:",
      await nft.balanceOf(alice._address),
      "after execute relayer nft balance:",
      await nft.balanceOf(sr.address)
    );
  });
});
